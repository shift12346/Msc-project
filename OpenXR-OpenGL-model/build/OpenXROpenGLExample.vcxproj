<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.props" Condition="Exists('packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.props')" />
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{86B771A6-6DC8-3FC9-AA2B-F384EC0CBAB2}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>OpenXROpenGLExample</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">OpenXROpenGLExample.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">OpenXROpenGLExample</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">OpenXROpenGLExample.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">OpenXROpenGLExample</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(SolutionDir)..\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">OpenXROpenGLExample.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">OpenXROpenGLExample</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(SolutionDir)..\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">OpenXROpenGLExample.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">OpenXROpenGLExample</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
    <CustomBuildAfterTargets>
    </CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
    <CustomBuildAfterTargets>
    </CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
    <CustomBuildAfterTargets>
    </CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
    <CustomBuildAfterTargets>
    </CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\OpenXR-OpenGL-Example\gfxwrapper;$(SolutionDir)..\..\OpenXR-OpenGL-Example\sdk-files;$(SolutionDir)..\..\OpenXR-SDK-main\OpenXR-SDK-main\include;$(SolutionDir)..\..\OpenXR-OpenGL-Example\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>openxr_loaderd.lib;advapi32.lib;pathcch.lib;Debug\openxr-gfxwrapper.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\OpenXR-SDK-main\OpenXR-SDK-main\build\src\loader\Debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/Debug/OpenXROpenGLExample.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/Debug/OpenXROpenGLExample.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <PostBuildEvent>
      <Command>xcopy "$(ProjectDir)..\shaders\*" "$(TargetDir)" /Y</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\OpenXR-OpenGL-Example\gfxwrapper;$(SolutionDir)..\..\OpenXR-OpenGL-Example\sdk-files;$(SolutionDir)..\..\OpenXR-SDK-main\OpenXR-SDK-main\include;$(SolutionDir)..\..\OpenXR-OpenGL-Example\external\include;F:\VR\OpenXR\OpenXR-OpenGL-Example\build\packages\opencv\build\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>openxr_loader.lib;advapi32.lib;pathcch.lib;Release\openxr-gfxwrapper.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;opencv_world470.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\OpenXR-SDK-main\OpenXR-SDK-main\build\src\loader\Release;F:\VR\OpenXR\OpenXR-OpenGL-Example\build\packages\opencv\build\x64\vc16\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/Release/OpenXROpenGLExample.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/Release/OpenXROpenGLExample.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <PostBuildEvent>
      <Command>xcopy "$(ProjectDir)..\shaders\*" "$(TargetDir)" /Y</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\OpenXR-OpenGL-Example\gfxwrapper;$(SolutionDir)..\..\OpenXR-OpenGL-Example\sdk-files;$(SolutionDir)..\..\OpenXR-SDK-main\OpenXR-SDK-main\include;$(SolutionDir)..\..\OpenXR-OpenGL-Example\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>openxr_loader.lib;jsoncpp_lib.lib;advapi32.lib;pathcch.lib;MinSizeRel\openxr-gfxwrapper.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files (x86)/OPENXR/lib;C:/Program Files (x86)/OPENXR/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/MinSizeRel/OpenXROpenGLExample.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/MinSizeRel/OpenXROpenGLExample.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <PostBuildEvent>
      <Command>xcopy "$(ProjectDir)..\shaders\*" "$(TargetDir)" /Y</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)..\..\OpenXR-OpenGL-Example\gfxwrapper;$(SolutionDir)..\..\OpenXR-OpenGL-Example\sdk-files;$(SolutionDir)..\..\OpenXR-SDK-main\OpenXR-SDK-main\include;$(SolutionDir)..\..\OpenXR-OpenGL-Example\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;XR_USE_GRAPHICS_API_OPENGL;_CRT_SECURE_NO_WARNINGS;XR_USE_PLATFORM_WIN32;XR_OS_WINDOWS;NOMINMAX;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>$(SolutionDir)..\gfxwrapper;$(SolutionDir)..\sdk-files;C:\Program Files (x86)\OPENXR\include;$(SolutionDir)..\external\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>openxr_loader.lib;jsoncpp_lib.lib;advapi32.lib;pathcch.lib;RelWithDebInfo\openxr-gfxwrapper.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files (x86)/OPENXR/lib;C:/Program Files (x86)/OPENXR/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/RelWithDebInfo/OpenXROpenGLExample.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Rafael Local Files/Github/OpenXR-OpenGL-Example/build/RelWithDebInfo/OpenXROpenGLExample.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <PostBuildEvent>
      <Command>xcopy "$(ProjectDir)..\shaders\*" "$(TargetDir)" /Y</Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="$(SolutionDir)..\main.cpp" />
    <ClCompile Include="OneLvPixMix.cpp" />
    <ClCompile Include="PixMix.cpp" />
    <ClCompile Include="Utilities.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="$(SolutionDir)..\build\openxr-gfxwrapper.vcxproj">
      <Project>{377E70AF-881B-31AC-9C75-333A9DED6254}</Project>
      <Name>openxr-gfxwrapper</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\shaders\basic.frag" />
    <None Include="..\shaders\basic.vert" />
    <None Include="..\shaders\rtt.frag" />
    <None Include="..\shaders\rtt.geom" />
    <None Include="..\shaders\rtt.vert" />
    <None Include="..\shaders\skybox.frag" />
    <None Include="..\shaders\skybox.vert" />
    <None Include="packages.config" />
    <None Include="quad.vert" />
    <None Include="quad.frag" />
    <None Include="scene1.frag" />
    <None Include="scene1.vert" />
    <None Include="scene2.frag" />
    <None Include="scene2.vert" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="skybox\back.jpg" />
    <Image Include="skybox\bottom.jpg" />
    <Image Include="skybox\front.jpg" />
    <Image Include="skybox\left.jpg" />
    <Image Include="skybox\right.jpg" />
    <Image Include="skybox\top.jpg" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="mesh.hpp" />
    <ClInclude Include="modelLoader.hpp" />
    <ClInclude Include="OneLvPixMix.h" />
    <ClInclude Include="PixMix.h" />
    <ClInclude Include="Utilities.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.targets" Condition="Exists('packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>这台计算机上缺少此项目引用的 NuGet 程序包。使用“NuGet 程序包还原”可下载这些程序包。有关更多信息，请参见 http://go.microsoft.com/fwlink/?LinkID=322105。缺少的文件是 {0}。</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.props'))" />
    <Error Condition="!Exists('packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\vcpkg.F.vcpkg.vcpkg.1.0.0\build\native\vcpkg.F.vcpkg.vcpkg.targets'))" />
  </Target>
</Project>